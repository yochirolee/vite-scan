/// <reference lib="webworker" />

import { clientsClaim } from "workbox-core";
import { ExpirationPlugin } from "workbox-expiration";
import { precacheAndRoute } from "workbox-precaching";
import { registerRoute } from "workbox-routing";
import { StaleWhileRevalidate, CacheFirst } from "workbox-strategies";

declare const self: ServiceWorkerGlobalScope;

// Ensure the manifest exists even if empty initially
const manifest = self.__WB_MANIFEST || [];

self.skipWaiting();
clientsClaim();

// Precache all of the assets generated by your build process.
precacheAndRoute(manifest);

// Cache the API responses
registerRoute(
	({ url }) => url.pathname.startsWith("/api/"),
	new StaleWhileRevalidate({
		cacheName: "api-cache",
		plugins: [
			new ExpirationPlugin({
				maxEntries: 50,
				maxAgeSeconds: 24 * 60 * 60, // 24 hours
			}),
		],
	}),
);

// Cache static assets
registerRoute(
	({ request }) =>
		request.destination === "style" ||
		request.destination === "script" ||
		request.destination === "image",
	new CacheFirst({
		cacheName: "static-resources",
	}),
);
